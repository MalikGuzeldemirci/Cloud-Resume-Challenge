AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  resume-challenge

  Sample SAM Template for resume-challenge

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    Tracing: Active
  Api:
    TracingEnabled: True

Resources:

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
      BucketName: resume-challenge-malik

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: counter-db
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions: 
        - AttributeName: WebsiteName
          AttributeType: S
      KeySchema: 
        - AttributeName: WebsiteName
          KeyType: HASH


  Route53:
      Type: 'AWS::Route53::RecordSetGroup'
      Properties:
        HostedZoneId: Z03806322TYG5ERJ120EX
        RecordSets:
          - Name: www.malikguzeldemirci.com
            Type: A
            AliasTarget:
              HostedZoneId: Z2FDTNDATAQYW2 #this value is constant for all cloudFront distributions
              DNSName: !GetAtt CloudfrontDistributionWebsite.DomainName

  ACMCertificate:
    Type: 'AWS::CertificateManager::Certificate'
    Properties: 
      DomainName: www.malikguzeldemirci.com
      ValidationMethod: DNS

  CloudfrontDistributionWebsite:           
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: !Ref ACMCertificate
          SslSupportMethod: sni-only
        Aliases:
          - www.malikguzeldemirci.com
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          AllowedMethods: ["GET", "HEAD"]
          CachedMethods: ["GET", "HEAD"]
          TargetOriginId: resume-challenge-malik.s3-website-us-east-1.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: resume-challenge-malik.s3-website-us-east-1.amazonaws.com
            Id: resume-challenge-malik.s3-website-us-east-1.amazonaws.com
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
              OriginSSLProtocols: ["TLSv1", "TLSv1.1", "TLSv1.2"]
        Enabled: "true"

  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
        PolicyDocument:
          Id: MyPolicy
          Version: 2012-10-17
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /*
        Bucket: !Ref S3Bucket

  incrementCount:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: incrementCount/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - AmazonDynamoDBFullAccess 
        - AWSLambdaExecute
        - AWSLambdaRole

  getCount:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: getCount/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - AmazonDynamoDBFullAccess 
        - AWSLambdaExecute
        - AWSLambdaRole
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /get
            Method: get

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  getCountApi:
    Description: "API Gateway endpoint URL for Prod stage for getCount function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get/"
  getCount:
    Description: "getCount Lambda Function ARN"
    Value: !GetAtt getCount.Arn
  getCountIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt getCountRole.Arn

